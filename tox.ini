[tox]
# You can run a specific section with `tox -e py3`
# You can run a specific test with `tox -e py3 adserver/auth/tests.py`
envlist = all
skipsdist = True


[testenv]
description = Run the full test suite
setenv =
    PYTHONPATH={toxinidir}/ethicaladserver:{toxinidir}
    DJANGO_SETTINGS_MODULE=config.settings.testing
    DJANGO_SETTINGS_SKIP_LOCAL=True
deps = -r{toxinidir}/requirements/development.txt

commands =
    # Run the unit tests
    coverage run -m pytest {posargs}

    # Run the coverage reports
    coverage html
    coverage report --show-missing --fail-under=93

    # Linting and code style
    pre-commit run --all-files

    # Migrations checks
    python manage.py makemigrations --check --dry-run

    # Docs checks
    sphinx-build -W --keep-going -b html -d {envtmpdir}/docs/doctrees docs {envtmpdir}/docs/html


[testenv:py3]
description = run test suite for the application with {basepython}
setenv =
    PYTHONPATH={toxinidir}/ethicaladserver:{toxinidir}
    DJANGO_SETTINGS_MODULE=config.settings.testing
    DJANGO_SETTINGS_SKIP_LOCAL=True
deps = -r{toxinidir}/requirements/development.txt
# You can run a specific test with `tox -e py3 adserver/auth/tests.py`
commands =
    coverage run -m pytest {posargs}


[testenv:migrations]
description = check for missing migrations
changedir = {toxinidir}
commands =
    python manage.py makemigrations --check --dry-run


[testenv:lint]
description = run through black to check coding standards
deps = -r{toxinidir}/requirements/development.txt
commands =
    # Linting and code style
    pre-commit run --all-files


[testenv:docs]
description = check and build documentation
changedir = {toxinidir}/docs
commands =
    sphinx-build -W --keep-going -b html -d {envtmpdir}/doctrees . {envtmpdir}/html


[testenv:coverage]
description = shows the coverage report
whitelist_externals = echo
commands =
    # Run html first so we have a report of the failing coverage results
    coverage html
    coverage report --show-missing --fail-under=93
